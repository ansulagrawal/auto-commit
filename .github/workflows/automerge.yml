name: Auto Merge

on:
  schedule:
    -  cron: '0 */12 * * *'

  # Allows manual triggering of the workflow from the GitHub UI
  workflow_dispatch:

jobs:
  auto_commit:
    runs-on: ubuntu-latest
    steps:
      # Checkout to the main branch
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      # Create a new branch and switch to it
      - name: Create new branch
        run: |
          BRANCH_NAME="auto-commit-$(date +'%Y-%m-%d-%H-%M-%S')"
          git checkout -b $BRANCH_NAME

      # Modify last update
      - name: Modify last update
        run: |
          d=`date '+%Y-%m-%dT%H:%M:%SZ'`
          echo $d > LAST_UPDATED

      # Commit the changes
      - name: Commit changes
        run: |
          git config --local user.email "ansulagrawal9@gmail.com"
          git config --local user.name "Ansul Agrawal"
          git add -A

          arr[0]="chore(bot): 😂 auto commit"
          arr[1]="chore(bot): 😱 auto commit"
          arr[2]="chore(bot): 👿 auto commit"
          arr[3]="chore(bot): 💩 auto commit"
          arr[4]="chore(bot): 🙏 auto commit"
          arr[5]="chore(bot): 🙈 auto commit"
          arr[6]="chore(bot): 🐐 auto commit"
          arr[7]="chore(bot): 🤖 auto commit"
          arr[8]="chore(bot): 🟩 auto commit"
          arr[9]="chore(bot): 👻 auto commit"

          rand=$[$RANDOM % ${#arr[@]}]

          git commit -m "${arr[$rand]}"

      # Push the new branch to GitHub
      - name: Push the new branch
        run: |
          git push origin $BRANCH_NAME

      # Create a pull request (PR)
      - name: Create PR
        uses: peter-evans/create-pull-request@v4
        with:
          title: "Auto Commit PR"
          body: "This PR contains an auto commit for the changes."
          head: $BRANCH_NAME
          base: main
          token: ${{ secrets.GITHUB_TOKEN }}

      # Merge the PR
      - name: Merge PR
        uses: peter-evans/merge-pull-request@v3
        with:
          pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
          merge-method: squash
          token: ${{ secrets.GITHUB_TOKEN }}

      # Delete the branch after merging the PR
      - name: Delete branch after merge
        run: |
          git push origin --delete $BRANCH_NAME
        if: ${{ success() }}
